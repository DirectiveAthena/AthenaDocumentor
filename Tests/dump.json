{
    "AthenaDocumentor.data.types": [
        {
            "type": "#class",
            "name": "Types",
            "doc": "An enumeration.",
            "parent_module": "AthenaDocumentor.data.types",
            "signature": "(value, names=None, *, module=None, qualname=None, type=None, start=1)",
            "methods": [
                {
                    "type": "#func",
                    "name": "_generate_next_value_",
                    "doc": "Generate the next value when not given.\n\nname: the name of the member\nstart: the initial start value or None\ncount: the number of existing members\nlast_value: the last value assigned or None",
                    "parent_module": "enum",
                    "signature": "(name, start, count, last_values)",
                    "methods": []
                },
                {
                    "type": "#func",
                    "name": "__new__",
                    "doc": "Create and return a new object.  See help(type) for accurate signature.",
                    "parent_module": "enum",
                    "signature": "(cls, value)",
                    "methods": []
                }
            ]
        }
    ],
    "AthenaDocumentor.models.parsed_data": [
        {
            "type": "#class",
            "name": "ParsedObject",
            "doc": "ParsedObject(obj)",
            "parent_module": "AthenaDocumentor.models.parsed_data",
            "signature": "(obj)",
            "methods": [
                {
                    "type": "#func",
                    "name": "__init__",
                    "doc": "Initialize self.  See help(type(self)) for accurate signature.",
                    "parent_module": "AthenaDocumentor.models.parsed_data",
                    "signature": "(self, obj)",
                    "methods": []
                },
                {
                    "type": "#func",
                    "name": "to_dict",
                    "doc": null,
                    "parent_module": "AthenaDocumentor.models.parsed_data",
                    "signature": "(self) -> 'dict'",
                    "methods": []
                },
                {
                    "type": "#func",
                    "name": "__repr__",
                    "doc": "Return repr(self).",
                    "parent_module": "AthenaDocumentor.models.parsed_data",
                    "signature": "(self)",
                    "methods": [
                        {
                            "type": "#func",
                            "name": "__repr__",
                            "doc": null,
                            "parent_module": "AthenaDocumentor.models.parsed_data",
                            "signature": "(self)",
                            "methods": []
                        }
                    ]
                },
                {
                    "type": "#func",
                    "name": "__eq__",
                    "doc": "Return self==value.",
                    "parent_module": "AthenaDocumentor.models.parsed_data",
                    "signature": "(self, other)",
                    "methods": []
                }
            ]
        }
    ],
    "AthenaDocumentor.functions.parser": [
        {
            "type": "#func",
            "name": "_parse_recursive",
            "doc": null,
            "parent_module": "AthenaDocumentor.functions.parser",
            "signature": "(module_, *, to_dict: 'bool' = False)",
            "methods": []
        },
        {
            "type": "#func",
            "name": "parse_all",
            "doc": null,
            "parent_module": "AthenaDocumentor.functions.parser",
            "signature": "(module_, *, to_dict: 'bool' = False) -> 'fully_parsed'",
            "methods": []
        }
    ],
    "AthenaDocumentor.functions.type_finder": [
        {
            "type": "#func",
            "name": "find_type",
            "doc": null,
            "parent_module": "AthenaDocumentor.functions.type_finder",
            "signature": "(obj) -> 'Types'",
            "methods": []
        }
    ]
}